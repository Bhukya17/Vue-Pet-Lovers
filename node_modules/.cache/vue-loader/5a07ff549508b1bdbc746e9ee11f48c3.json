{"remainingRequest":"/home/access/Desktop/Bodhi-PetProjects/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/access/Desktop/Bodhi-PetProjects/src/components/Sample.vue?vue&type=style&index=0&id=16f1924c&scoped=true&lang=css","dependencies":[{"path":"/home/access/Desktop/Bodhi-PetProjects/src/components/Sample.vue","mtime":1626982526743},{"path":"/home/access/Desktop/Bodhi-PetProjects/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/access/Desktop/Bodhi-PetProjects/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/home/access/Desktop/Bodhi-PetProjects/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/access/Desktop/Bodhi-PetProjects/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/access/Desktop/Bodhi-PetProjects/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltZyB7CiAgd2lkdGg6IDIwMHB4Owp9CmgxIHsKICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsKfQo="},{"version":3,"sources":["/home/access/Desktop/Bodhi-PetProjects/src/components/Sample.vue"],"names":[],"mappings":";AAwCA,CAAC,CAAC,EAAE;EACF,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACd;AACA,CAAC,EAAE;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C","file":"/home/access/Desktop/Bodhi-PetProjects/src/components/Sample.vue","sourceRoot":"","sourcesContent":["<template>\n  <h1>Hello Vue 3!!!!</h1>\n  <button @click=\"inc\">Clicked {{ count }} times.</button>\n  <button>Clicked {{ result }} times.</button>\n  <button  v-if=\"count.length > 5\" >Clicked {{ result }} times.</button>\n\n</template>\n\n<script>\nimport { ref } from \"vue\";\nexport default {\n    name:\"Sample\",\n  setup() {\n    const count = ref([]);\n    const inc = () => {\n      count.value.push(1);\n    }; \n\n    const i= ref(0);\n    const result = ref([]);\n    const length=ref(count.value.length);\n    if(length.value > 5){\n      console.log( count.value.slice(0, 5));\n    console.log(length.value);\n    }\n    else{\n    result.value.push(count.value.slice(0 , 5));\n    }\n\n\n    return {\n      count,\n      inc,\n      result\n    };\n  }\n};\n</script>\n\n<style scoped>\nimg {\n  width: 200px;\n}\nh1 {\n  font-family: Arial, Helvetica, sans-serif;\n}\n</style>"]}]}